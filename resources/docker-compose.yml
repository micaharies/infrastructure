---
version: "3.6"
services:
  gokapi:
    container_name: "gokapi"
    image: "f0rc3/gokapi:latest"
    ports:
      - "53842:53842/tcp"
      - "53842:53842/udp"
    restart: "unless-stopped"
    volumes:
      - "/mnt/easystore/gokapi/config:/app/config"
      - "/mnt/easystore/gokapi/data:/app/data"
  homepage:
    container_name: "homepage"
    image: "ghcr.io/benphelps/homepage:latest"
    ports:
      - "2000:3000/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/homepage:/app/config"
      - "/mnt/easystore:/mnt/easystore:ro"
      - "/mnt/sdb1:/mnt/sdb1:ro"
      - "/mnt/sdc1:/mnt/sdc1:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
  kavita:
    container_name: "kavita"
    image: "kizaing/kavita:latest"
    ports:
      - "5000:5000/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/kavita:/kavita/config"
      - "/mnt/easystore/books:/manga"
    working_dir: "/kavita"
  lidarr2:
    container_name: "lidarr2"
    environment:
      - "PUID=1000"
      - "PGID=1001"
      - "DEEMIX_SINGLE_USER=true"
    image: "youegraillot/lidarr-on-steroids:latest"
    ports:
      - "6595:6595/tcp"
      - "8686:8686/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/lidarr2/deemix:/config_deemix"
      - "/dockerData/lidarr2/lidarr:/config"
      - "/mnt/easystore/music:/music"
      - "/mnt/easystore/torrents:/downloads"
  playlistSync:
    container_name: "playlistSync"
    environment:
      - "PLEX_URL=http://192.168.0.147:32400" #! Change This
      - "WRITE_MISSING_AS_CSV=1"
      - "ADD_PLAYLIST_POSTER=1"
      - "SPOTIFY_CLIENT_SECRET=" #! Change This
      - "SPOTIFY_USER_ID=ariesmemes"
      - "PLEX_TOKEN=" #! Change This
      - "APPEND_SERVICE_SUFFIX=1"
      - "ADD_PLAYLIST_DESCRIPTION=1"
      - "APPEND_INSTEAD_OF_SYNC=0"
      - "SECONDS_TO_WAIT=84000"
      - "SPOTIFY_CLIENT_ID=" #! Change This
    image: "rnagabhyrava/plexplaylistsync:latest"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/playlists:/data"
  plex:
    container_name: "plex"
    environment:
      - "PUID=1000"
      - "PGID=1001"
      - "PLEX_CLAIM=" #! Change This
    expose:
      - "1900/udp"
      - "32400/tcp"
      - "32410/udp"
      - "32412/udp"
      - "32413/udp"
      - "32414/udp"
      - "32469/tcp"
      - "5353/udp"
      - "8324/tcp"
    image: "lscr.io/linuxserver/plex:latest"
    network_mode: "host"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/plex:/config"
      - "/mnt/easystore/music:/music"
      - "/mnt/easystore/yt:/yt"
  portainer:
    container_name: "portainer"    
    image: "portainer/portainer-ce:latest"
    ports:
      - "8000:8000/tcp"
      - "9000:9000/tcp"
    restart: "always"
    volumes:
      - "/dockerData/portainer:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
  prowlarr:
    container_name: "prowlarr"
    image: "lscr.io/linuxserver/prowlarr:develop"
    ports:
      - "9696:9696/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/prowlarr:/config"
  qbittorrent:
    container_name: "qbittorrent"
    environment:
      - "VPN_ENABLED=yes"
      - "PUID=1000"
      - "PGID=1001"
      - "VPN_TYPE=wireguard"
      - "LAN_NETWORK=192.168.0.0/24"
    image: "dyonr/qbittorrentvpn:latest"
    network_mode: "bridge"
    ports:
      - "8181:8080/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/qbit:/config"
      - "/mnt/easystore/torrents:/downloads"
  readarr:
    container_name: "readarr"
    environment:
      - "PUID=1000"
      - "PGID=1001"
    image: "lscr.io/linuxserver/readarr:develop"
    ports:
      - "8787:8787/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/readarr:/config"
      - "/mnt/easystore/books:/books"
      - "/mnt/easystore/torrents:/downloads"
  speedtest-tracker:
    container_name: "speedtest-tracker"
    environment:
      - "PGID=1000"
      - "PUID=1000"
    image: "ghcr.io/alexjustesen/speedtest-tracker:latest"
    ports:
      - "3001:443/tcp"
      - "3000:80/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/speedtest:/config"
  unifi-controller:
    container_name: "unifi-controller"
    environment:
      - "PGID=1001"
      - "PUID=1000"
    image: "lscr.io/linuxserver/unifi-controller:latest"
    ports:
      - "10001:10001/udp"
      - "1900:1900/udp"
      - "3478:3478/udp"
      - "5514:5514/udp"
      - "6789:6789/tcp"
      - "8080:8080/tcp"
      - "8443:8443/tcp"
      - "8843:8843/tcp"
      - "8880:8880/tcp"
    restart: "unless-stopped"
    volumes:
      - "/config:/dockerData/unifi"
      - "/mnt/easystore/unifi:/config"
  watchtower:
    container_name: "watchtower"
    image: "containrrr/watchtower:latest"
    restart: "unless-stopped"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  wg-easy:
    container_name: "wg-easy"
    environment:
      - "WG_HOST=152.208.9.24"
      - "PASSWORD=" #! Change This
    image: "weejewel/wg-easy"
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/wg:/etc/wireguard"
    adguardhome:
        image: adguard/adguardhome
        ports:
            - '3500:3000/tcp'
            - '53:53/udp'
            - '53:53/tcp'
        volumes:
            - '/dockerData/adguard/config:/opt/adguardhome/conf'
            - '/dockerData/adguard/work:/opt/adguardhome/work'
        restart: unless-stopped
        container_name: adguardhome
    csgo:
        image: 'cm2network/csgo:sourcemod'
        environment:
            - SRCDS_MAPGROUP=mg_custom
            - SRCDS_MAXPLAYERS=10
            - SRCDS_WORKSHOP_AUTHKEY=aaa #! Change This
            - SRCDS_TOKEN=aaa #! Change This
            - SRCDS_PORT=28962
        container_name: csgo
        volumes:
            - '/dockerData/csgo:/home/steam/csgo-dedicated/'
        ports:
            - '28962:28962/udp'
            - '28962:28962'
        restart: unless-stopped
    cs-demo-uploader:
        image: 'git.chse.dev/chase/cs-demo-uploader:latest'
        environment:
            - DELETE_AFTER_UPLOAD=false
            - UPLOAD_CHANNEL_ID= #! Change This
            - DISCORD_BOT_TOKEN= #! Change This
        volumes:
            - '/dockerData/csgo/csgo:/csgo'
        container_name: cs-demo-uploader
