---
version: "3.6"
services:
  gokapi:
    container_name: "gokapi"
    image: "f0rc3/gokapi:latest"
    ports:
      - "53842:53842/tcp"
      - "53842:53842/udp"
    restart: "unless-stopped"
    volumes:
      - "/mnt/easystore/gokapi/config:/app/config"
      - "/mnt/easystore/gokapi/data:/app/data"
  homepage:
    container_name: "homepage"
    image: "ghcr.io/benphelps/homepage:latest"
    ports:
      - "2000:3000/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/homepage:/app/config"
      - "/mnt/easystore:/mnt/easystore:ro"
      - "/mnt/sdb1:/mnt/sdb1:ro"
      - "/mnt/sdc1:/mnt/sdc1:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
  kavita:
    container_name: "kavita"
    image: "kizaing/kavita:latest"
    ports:
      - "5000:5000/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/kavita:/kavita/config"
      - "/mnt/easystore/books:/manga"
    working_dir: "/kavita"
  lidarr2:
    container_name: "lidarr2"
    environment:
      - "PUID=1000"
      - "PGID=1001"
      - "DEEMIX_SINGLE_USER=true"
    image: "youegraillot/lidarr-on-steroids:latest"
    ports:
      - "6595:6595/tcp"
      - "8686:8686/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/lidarr2/deemix:/config_deemix"
      - "/dockerData/lidarr2/lidarr:/config"
      - "/mnt/easystore/music:/music"
      - "/mnt/easystore/torrents:/downloads"
  playlistSync:
    container_name: "playlistSync"
    environment:
      - "PLEX_URL=http://192.168.0.147:32400" #! Change This
      - "WRITE_MISSING_AS_CSV=1"
      - "ADD_PLAYLIST_POSTER=1"
      - "SPOTIFY_CLIENT_SECRET=" #! Change This
      - "SPOTIFY_USER_ID=ariesmemes"
      - "PLEX_TOKEN=" #! Change This
      - "APPEND_SERVICE_SUFFIX=1"
      - "ADD_PLAYLIST_DESCRIPTION=1"
      - "APPEND_INSTEAD_OF_SYNC=0"
      - "SECONDS_TO_WAIT=84000"
      - "SPOTIFY_CLIENT_ID=" #! Change This
    image: "rnagabhyrava/plexplaylistsync:latest"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/playlists:/data"
  plex:
    container_name: "plex"
    environment:
      - "PUID=1000"
      - "PGID=1001"
      - "PLEX_CLAIM=" #! Change This
    expose:
      - "1900/udp"
      - "32400/tcp"
      - "32410/udp"
      - "32412/udp"
      - "32413/udp"
      - "32414/udp"
      - "32469/tcp"
      - "5353/udp"
      - "8324/tcp"
    image: "lscr.io/linuxserver/plex:latest"
    network_mode: "host"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/plex:/config"
      - "/mnt/easystore/music:/music"
      - "/mnt/easystore/yt:/yt"
  portainer:
    container_name: "portainer"
    image: "portainer/portainer-ce:latest"
    ports:
      - "8000:8000/tcp"
      - "9000:9000/tcp"
    restart: "always"
    volumes:
      - "/dockerData/portainer:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
  prowlarr:
    container_name: "prowlarr"
    image: "lscr.io/linuxserver/prowlarr:develop"
    ports:
      - "9696:9696/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/prowlarr:/config"
  qbittorrent:
    container_name: "qbittorrent"
    environment:
      - "VPN_ENABLED=yes"
      - "PUID=1000"
      - "PGID=1001"
      - "VPN_TYPE=wireguard"
      - "LAN_NETWORK=192.168.0.0/24"
    image: "dyonr/qbittorrentvpn:latest"
    network_mode: "bridge"
    ports:
      - "8181:8080/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/qbit:/config"
      - "/mnt/easystore/torrents:/downloads"
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
  readarr:
    container_name: "readarr"
    environment:
      - "PUID=1000"
      - "PGID=1001"
    image: "lscr.io/linuxserver/readarr:develop"
    ports:
      - "8787:8787/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/readarr:/config"
      - "/mnt/easystore/books:/books"
      - "/mnt/easystore/torrents:/downloads"
  speedtest-tracker:
    container_name: "speedtest-tracker"
    environment:
      - "PGID=1000"
      - "PUID=1000"
    image: "ghcr.io/alexjustesen/speedtest-tracker:latest"
    ports:
      - "3001:443/tcp"
      - "3000:80/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/speedtest:/config"
  unifi-controller:
    container_name: "unifi-controller"
    environment:
      - "PGID=1001"
      - "PUID=1000"
    image: "lscr.io/linuxserver/unifi-controller:latest"
    ports:
      - "10001:10001/udp"
      - "1900:1900/udp"
      - "3478:3478/udp"
      - "5514:5514/udp"
      - "6789:6789/tcp"
      - "8080:8080/tcp"
      - "8443:8443/tcp"
      - "8843:8843/tcp"
      - "8880:8880/tcp"
    restart: "unless-stopped"
    volumes:
      - "/config:/dockerData/unifi"
      - "/mnt/easystore/unifi:/config"
    network_mode: "host"
  watchtower:
    container_name: "watchtower"
    image: "containrrr/watchtower:latest"
    restart: "unless-stopped"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  wg-easy:
    container_name: "wg-easy"
    environment:
      - "WG_HOST=152.208.9.24"
      - "PASSWORD=" #! Change This
    image: "weejewel/wg-easy"
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/wg:/etc/wireguard"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
  csgo:
    image: 'cm2network/csgo:sourcemod'
    environment:
      - SRCDS_MAPGROUP=mg_custom
      - SRCDS_MAXPLAYERS=10
      - SRCDS_WORKSHOP_AUTHKEY=aaa #! Change This
      - SRCDS_TOKEN=aaa #! Change This
      - SRCDS_PORT=28962
      - ADDITIONAL_ARGS=-console -usercon -net_port_try 1 -condebug
    container_name: csgo
    volumes:
      - '/dockerData/csgo:/home/steam/csgo-dedicated/'
    ports:
      - '28962:28962/udp'
      - '28962:28962'
    restart: unless-stopped
  cs-demo-uploader:
    image: 'git.chse.dev/chase/cs-demo-uploader:latest'
    environment:
      - DELETE_AFTER_UPLOAD=false
      - UPLOAD_CHANNEL_ID= #! Change This
      - DISCORD_BOT_TOKEN= #! Change This
    volumes:
      - '/dockerData/csgo/csgo:/csgo'
    container_name: cs-demo-uploader
    restart: "unless-stopped"
  iw4x-vanilla:
    image: 'git.chse.dev/gaming/iw4x-docker:latest'
    volumes:
      - '/dockerData/iw4x:/iw4x'
    environment:
      - 'GAME_PARAMS=-dedicated -disable-rate-limit-check +exec server.cfg +map_rotate'
    ports:
      - '28965:28960/udp'
      - '28965:28960'
    container_name: IW4x-Vanilla-SND
    restart: "unless-stopped"
  iw4x-promod:
    image: 'git.chse.dev/gaming/iw4x-docker:latest'
    volumes:
      - '/dockerData/iw4x:/iw4x'
    environment:
      - 'GAME_PARAMS=-dedicated -disable-rate-limit-check +exec promod.cfg +set fs_game mods/promod +map_rotate'
    ports:
      - '28960:28960/udp'
      - '28960:28960'
    container_name: IW4x-Promod
    restart: "unless-stopped"
  iw4madmin:
    image: 'git.chse.dev/gaming/iw4madmin-docker:latest'
    volumes:
      - '/dockerData/iw4madmin:/iw4madmin'
      - '/dockerData/iw4x:/iw4x'
      - '/dockerData/csgo:/csgo'
    ports:
      - '1624:1624'
    container_name: IW4MAdmin
    restart: "unless-stopped"
  mc:
    image: itzg/minecraft-server
    tty: true
    stdin_open: true
    ports:
      - "25565:25565"
      - "19132:19132"
      - "19132:19132/udp"
    environment:
      MEMORY: "4G"
      USE_AIKAR_FLAGS: "true"
      VERSION: "LATEST"
      TYPE: "PURPUR"
      EULA: "TRUE"
    volumes:
      - /dockerData/mc:/data
    restart: "unless-stopped"
  bookstack:
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    environment:
      - PUID=1000
      - PGID=1000
      - APP_URL=https://192.168.0.31:2002
      - DB_HOST=bookstack_db
      - DB_PORT=3306
      - DB_USER=bookstack
      - DB_PASS=#! Change This
      - DB_DATABASE=bookstackapp
    volumes:
      - /dockerData/bookstack/config:/config
    ports:
      - 2002:80
    restart: unless-stopped
    depends_on:
      - bookstack_db
  bookstack_db:
    image: lscr.io/linuxserver/mariadb
    container_name: bookstack_db
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=#! Change This
      - TZ=America/New_York
      - MYSQL_DATABASE=bookstackapp
      - MYSQL_USER=bookstack
      - MYSQL_PASSWORD= #! Change This
    volumes:
      - /dockerData/bookstack/db:/config
    restart: unless-stopped
  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve --cache-file /var/cache/ntfy/cache.db
    volumes:
      - /dockerData/ntfy:/var/cache/ntfy
      - /dockerData/ntfy/server.yml:/etc/ntfy/server.yml
    ports:
      - 2003:80
    restart: unless-stopped
  fast-cli-api:
    image: 'git.chse.dev/chase/fast-cli-api:latest'
    ports:
      - '1993:3000'
    environment:
      - RETEST_EVERY_X_HOURS=4
    container_name: fast-cli-api
    restart: unless-stopped
  tubearchivist:
    container_name: tubearchivist
    restart: unless-stopped
    image: bbilly1/tubearchivist
    ports:
      - 2004:8000
    volumes:
      - /mnt/easystore/yt/media:/youtube
      - /mnt/easystore/yt/cache:/cache
    environment:
      - ES_URL=http://172.24.0.4:9200 # needs protocol e.g. http and port
      - REDIS_HOST=archivist-redis # don't add protocol
      - HOST_UID=1000
      - HOST_GID=1000
      - TA_HOST=tube.mhaire.net # set your host name
      - TA_USERNAME=user # your initial TA credentials
      - TA_PASSWORD=#! Change This # your initial TA credentials
      - ELASTIC_PASSWORD=#! Change This # set password for Elasticsearch
      - TZ=America/New_York # set your time zone
    depends_on:
      - archivist-es
      - archivist-redis
  archivist-redis:
    image: redis/redis-stack-server
    container_name: archivist-redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - /mnt/easystore/yt/redis:/data
    depends_on:
      - archivist-es
  archivist-es:
    image: bbilly1/tubearchivist-es # only for amd64, or use official es 8.9.0
    container_name: archivist-es
    restart: unless-stopped
    environment:
      - "ELASTIC_PASSWORD=#! Change This" # matching Elasticsearch password
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=true"
      - "discovery.type=single-node"
      - "path.repo=/usr/share/elasticsearch/data/snapshot"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /mnt/easystore/yt/es:/usr/share/elasticsearch/data # check for permission error when using bind mount, see readme
    expose:
      - "9200"
  dizquetv:
    image: vexorian/dizquetv:latest
    container_name: dizquetv
    restart: unless-stopped
    ports:
      - 2005:8000
    volumes:
      - /mnt/easystore/yt/dizque:/home/node/app/.dizquetv
  uptime-kuma:
    image: 'louislam/uptime-kuma:1'
    container_name: uptime-kuma
    volumes:
      - '/dockerData/uptimekuma:/app/data'
    ports:
      - '2006:3001'
    restart: always
  kasm:
    image: 'lscr.io/linuxserver/kasm:latest'
    restart: unless-stopped
    volumes:
      - '/run/udev/data:/run/udev/data'
      - '/dev/input:/dev/input'
      - '/mnt/easystore/kasm/profiles:/profiles'
      - '/mnt/easystore/kasm/opt:/opt'
    ports:
      - '2010:2010'
      - '3000:3000'
    environment:
      - KASM_PORT=2010
    privileged: true
    container_name: kasm
