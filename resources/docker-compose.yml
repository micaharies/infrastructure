---
version: "3.6"
networks:
  ghost_default:
    external: true
    name: "ghost_default"
  immich_default:
    external: true
    name: "immich_default"
  nextcloud-aio:
    external: true
    name: "nextcloud-aio"
services:
  ghost-db-1:
    container_name: "ghost-db-1"
    environment:
      - "MYSQL_ROOT_PASSWORD=" #! Change This
    expose:
      - "3306/tcp"
      - "33060/tcp"
    image: "mysql:8.0"
    networks:
      - "ghost_default"
    restart: "always"
    volumes:
      - "/mnt/easystore/mysql:/var/lib/mysql"
  ghost-ghost-1:
    container_name: "ghost-ghost-1"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "database__connection__database=ghost"
      - "url=https://blog.mhaire.net"
      - "database__client=mysql"
      - "database__connection__host=db"
      - "database__connection__user=root"
      - "database__connection__password=" #! Change This
      - "mail__transport=SMTP"
      - "mail__from=Micah <newsletter@mhaire.net>"
      - "mail__options__service=SMTP"
      - "mail__options__host=box.mhaire.net"
      - "mail__options__port=587"
      - "mail__options__auth__user=newsletter@mhaire.net"
      - "mail__options__auth__pass=" #! Change This
      - "mail__options__secure=false"
      - "NODE_ENV=production"
      - "GHOST_CLI_VERSION=1.24.2"
      - "GHOST_INSTALL=/var/lib/ghost"
      - "GHOST_CONTENT=/var/lib/ghost/content"
    image: "ghost:5-alpine"
    networks:
      - "ghost_default"
    ports:
      - "2368:2368/tcp"
    restart: "always"
    volumes:
      - "/mnt/easystore/ghost:/var/lib/ghost/content"
  gokapi:
    container_name: "gokapi"
    image: "f0rc3/gokapi:latest"
    ports:
      - "53842:53842/tcp"
      - "53842:53842/udp"
    restart: "unless-stopped"
    volumes:
      - "/mnt/easystore/gokapi/config:/app/config"
      - "/mnt/easystore/gokapi/data:/app/data"
  homepage:
    container_name: "homepage"
    image: "ghcr.io/benphelps/homepage:latest"
    ports:
      - "2000:3000/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/homepage:/app/config"
      - "/mnt/easystore:/mnt/easystore:ro"
      - "/mnt/sdb1:/mnt/sdb1:ro"
      - "/mnt/sdc1:/mnt/sdc1:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
  immich_machine_learning:
    container_name: "immich_machine_learning"
    environment:
      - "TYPESENSE_API_KEY=thisisanepicapikey69420"
      - "IMMICH_SERVER_URL=http://immich-server:3001"
      - "DB_HOSTNAME=immich_postgres"
      - "REDIS_HOSTNAME=immich_redis"
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "DB_PASSWORD=postgres"
      - "PUBLIC_LOGIN_PAGE_MESSAGE="
      - "DB_DATABASE_NAME=immich"
      - "DB_USERNAME=postgres"
      - "UPLOAD_LOCATION=/mnt/easystore/immich"
      - "IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003"
    image: "ghcr.io/immich-app/immich-machine-learning:release"
    networks:
      - "immich_default"
    restart: "always"
    volumes:
      - "/mnt/easystore/immich:/usr/src/app/upload"
      - "immich_model-cache:/cache"
  immich_microservices:
    container_name: "immich_microservices"
    environment:
      - "TYPESENSE_API_KEY=thisisanepicapikey69420"
      - "DB_DATABASE_NAME=immich"
      - "IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003"
      - "REDIS_HOSTNAME=immich_redis"
      - "PUBLIC_LOGIN_PAGE_MESSAGE="
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "DB_HOSTNAME=immich_postgres"
      - "DB_PASSWORD=postgres"
      - "UPLOAD_LOCATION=/mnt/easystore/immich"
      - "DB_USERNAME=postgres"
      - "IMMICH_SERVER_URL=http://immich-server:3001"
    expose:
      - "3001/tcp"
    image: "ghcr.io/immich-app/immich-server:release"
    networks:
      - "immich_default"
    restart: "always"
    volumes:
      - "/mnt/easystore/immich:/usr/src/app/upload"
  immich_postgres:
    container_name: "immich_postgres"
    environment:
      - "DB_USERNAME=postgres"
      - "PUBLIC_LOGIN_PAGE_MESSAGE="
      - "IMMICH_SERVER_URL=http://immich-server:3001"
      - "POSTGRES_DB=immich"
      - "REDIS_HOSTNAME=immich_redis"
      - "POSTGRES_PASSWORD=postgres"
      - "DB_PASSWORD=postgres"
      - "DB_DATABASE_NAME=immich"
      - "UPLOAD_LOCATION=/mnt/easystore/immich"
      - "IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003"
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "PG_DATA=/var/lib/postgresql/data"
      - "POSTGRES_USER=postgres"
      - "DB_HOSTNAME=immich_postgres"
      - "TYPESENSE_API_KEY=thisisanepicapikey69420"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/14/bin"
      - "GOSU_VERSION=1.16"
      - "LANG=en_US.utf8"
      - "PG_MAJOR=14"
      - "PG_VERSION=14.9-1.pgdg120+1"
      - "PGDATA=/var/lib/postgresql/data"
    expose:
      - "5432/tcp"
    image: "postgres:14"
    networks:
      - "immich_default"
    restart: "always"
    volumes:
      - "immich_pgdata:/var/lib/postgresql/data"
  immich_proxy:
    container_name: "immich_proxy"
    environment:
      - "IMMICH_SERVER_URL=http://immich-server:3001"
      - "IMMICH_WEB_URL=http://immich-web:3000"
    image: "ghcr.io/immich-app/immich-proxy:release"
    networks:
      - "immich_default"
    ports:
      - "2283:8080/tcp"
    restart: "always"
    user: "101"
  immich_redis:
    command:
      - "redis-server"
    container_name: "immich_redis"
    expose:
      - "6379/tcp"
    image: "redis:6.2"
    networks:
      - "immich_default"
    restart: "always"
  immich_server:
    container_name: "immich_server"
    environment:
      - "DB_USERNAME=postgres"
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "IMMICH_SERVER_URL=http://immich-server:3001"
      - "DB_HOSTNAME=immich_postgres"
      - "DB_PASSWORD=postgres"
      - "UPLOAD_LOCATION=/mnt/easystore/immich"
      - "TYPESENSE_API_KEY=thisisanepicapikey69420"
      - "IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003"
      - "REDIS_HOSTNAME=immich_redis"
      - "PUBLIC_LOGIN_PAGE_MESSAGE="
      - "DB_DATABASE_NAME=immich"
    expose:
      - "3001/tcp"
    image: "ghcr.io/immich-app/immich-server:release"
    networks:
      - "immich_default"
    restart: "always"
    volumes:
      - "/mnt/easystore/immich:/usr/src/app/upload"
  immich_typesense:
    container_name: "immich_typesense"
    environment:
      - "TYPESENSE_DATA_DIR=/data"
      - "TYPESENSE_API_KEY=thisisanepicapikey69420"
    expose:
      - "8108/tcp"
    image: "typesense/typesense:0.24.0"
    networks:
      - "immich_default"
    restart: "always"
    volumes:
      - "immich_tsdata:/data"
  immich_web:
    container_name: "immich_web"
    environment:
      - "DB_HOSTNAME=immich_postgres"
      - "DB_USERNAME=postgres"
      - "UPLOAD_LOCATION=/mnt/easystore/immich"
      - "TYPESENSE_API_KEY=thisisanepicapikey69420"
      - "DB_PASSWORD=postgres"
      - "IMMICH_SERVER_URL=http://immich-server:3001"
      - "DB_DATABASE_NAME=immich"
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003"
      - "PUBLIC_LOGIN_PAGE_MESSAGE="
      - "REDIS_HOSTNAME=immich_redis"
    expose:
      - "3000/tcp"
    image: "ghcr.io/immich-app/immich-web:release"
    networks:
      - "immich_default"
    restart: "always"
  kavita:
    container_name: "kavita"
    image: "kizaing/kavita:latest"
    ports:
      - "5000:5000/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/kavita:/kavita/config"
      - "/mnt/easystore/books:/manga"
    working_dir: "/kavita"
  lidarr2:
    container_name: "lidarr2"
    environment:
      - "PUID=1000"
      - "PGID=1001"
      - "DEEMIX_SINGLE_USER=true"
    image: "youegraillot/lidarr-on-steroids:latest"
    ports:
      - "6595:6595/tcp"
      - "8686:8686/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/lidarr2/deemix:/config_deemix"
      - "/dockerData/lidarr2/lidarr:/config"
      - "/mnt/easystore/music:/music"
      - "/mnt/easystore/torrents:/downloads"
  nextcloud-aio-mastercontainer:
    container_name: "nextcloud-aio-mastercontainer"
    environment:
      - "SKIP_DOMAIN_VALIDATION=true"
      - "DISABLE_BACKUP_SECTION=true"
      - "APACHE_PORT=11000"
      - "TALK_PORT=3478"
      - "NEXTCLOUD_DATADIR=/mnt/easystore/nextcloud"
      - "NEXTCLOUD_ADDITIONAL_APKS=imagemagick"
      - "NEXTCLOUD_ADDITIONAL_PHP_EXTENSIONS=imagick"
      - "NEXTCLOUD_ENABLE_DRI_DEVICE=true"
      - "COLLABORA_SECCOMP_DISABLED=true"
    image: "nextcloud/all-in-one:latest"
    networks:
      - "nextcloud-aio"
    ports:
      - "11001:8080/tcp"
    restart: "always"
    user: "root"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "nextcloud_aio_mastercontainer:/mnt/docker-aio-config"
  playlistSync:
    container_name: "playlistSync"
    environment:
      - "PLEX_URL=http://192.168.0.147:32400" #! Change This
      - "WRITE_MISSING_AS_CSV=1"
      - "ADD_PLAYLIST_POSTER=1"
      - "SPOTIFY_CLIENT_SECRET=" #! Change This
      - "SPOTIFY_USER_ID=ariesmemes"
      - "PLEX_TOKEN=" #! Change This
      - "APPEND_SERVICE_SUFFIX=1"
      - "ADD_PLAYLIST_DESCRIPTION=1"
      - "APPEND_INSTEAD_OF_SYNC=0"
      - "SECONDS_TO_WAIT=84000"
      - "SPOTIFY_CLIENT_ID=" #! Change This
    image: "rnagabhyrava/plexplaylistsync:latest"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/playlists:/data"
  plex:
    container_name: "plex"
    environment:
      - "PUID=1000"
      - "PGID=1001"
      - "PLEX_CLAIM=" #! Change This
    expose:
      - "1900/udp"
      - "32400/tcp"
      - "32410/udp"
      - "32412/udp"
      - "32413/udp"
      - "32414/udp"
      - "32469/tcp"
      - "5353/udp"
      - "8324/tcp"
    image: "lscr.io/linuxserver/plex:latest"
    network_mode: "host"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/plex:/config"
      - "/mnt/easystore/music:/music"
      - "/mnt/easystore/yt:/yt"
  portainer:
    container_name: "portainer"    
    image: "portainer/portainer-ce:latest"
    ports:
      - "8000:8000/tcp"
      - "9000:9000/tcp"
    restart: "always"
    volumes:
      - "/dockerData/portainer:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
  prowlarr:
    container_name: "prowlarr"
    image: "lscr.io/linuxserver/prowlarr:develop"
    ports:
      - "9696:9696/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/prowlarr:/config"
  qbittorrent:
    container_name: "qbittorrent"
    environment:
      - "VPN_ENABLED=yes"
      - "PUID=1000"
      - "PGID=1001"
      - "VPN_TYPE=wireguard"
      - "LAN_NETWORK=192.168.0.0/24"
    image: "dyonr/qbittorrentvpn:latest"
    network_mode: "bridge"
    ports:
      - "8181:8080/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/qbit:/config"
      - "/mnt/easystore/torrents:/downloads"
  readarr:
    container_name: "readarr"
    environment:
      - "PUID=1000"
      - "PGID=1001"
    image: "lscr.io/linuxserver/readarr:develop"
    ports:
      - "8787:8787/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/readarr:/config"
      - "/mnt/easystore/books:/books"
      - "/mnt/easystore/torrents:/downloads"
  speedtest-tracker:
    container_name: "speedtest-tracker"
    environment:
      - "PGID=1000"
      - "PUID=1000"
    image: "ghcr.io/alexjustesen/speedtest-tracker:latest"
    ports:
      - "3001:443/tcp"
      - "3000:80/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/speedtest:/config"
  unifi-controller:
    container_name: "unifi-controller"
    environment:
      - "PGID=1001"
      - "PUID=1000"
    image: "lscr.io/linuxserver/unifi-controller:latest"
    ports:
      - "10001:10001/udp"
      - "1900:1900/udp"
      - "3478:3478/udp"
      - "5514:5514/udp"
      - "6789:6789/tcp"
      - "8080:8080/tcp"
      - "8443:8443/tcp"
      - "8843:8843/tcp"
      - "8880:8880/tcp"
    restart: "unless-stopped"
    volumes:
      - "/config:/dockerData/unifi"
      - "/mnt/easystore/unifi:/config"
  watchtower:
    container_name: "watchtower"
    image: "containrrr/watchtower:latest"
    restart: "unless-stopped"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  wg-easy:
    container_name: "wg-easy"
    environment:
      - "WG_HOST=152.208.9.24"
      - "PASSWORD=" #! Change This
    image: "weejewel/wg-easy"
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: "unless-stopped"
    volumes:
      - "/dockerData/wg:/etc/wireguard"
